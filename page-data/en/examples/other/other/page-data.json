{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-10-69-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/en/examples/other/other","result":{"data":{"site":{"siteMetadata":{"title":"G2","githubUrl":"https://github.com/antvis/g2","examples":[{"slug":"gallery","icon":"gallery","title":{"zh":"官方精品库","en":"Featured"}},{"slug":"interaction","icon":"interaction","title":{"zh":"交互语法","en":"Grammar of Interaction"}},{"slug":"line","icon":"line","title":{"zh":"折线图","en":"Line Chart"}},{"slug":"area","icon":"area","title":{"zh":"面积图","en":"Area Chart"}},{"slug":"column","icon":"column","title":{"zh":"柱状图","en":"Column Chart"}},{"slug":"bar","icon":"bar","title":{"zh":"条形图","en":"Bar Chart"}},{"slug":"pie","icon":"pie","title":{"zh":"饼图","en":"Pie Chart"}},{"slug":"point","icon":"point","title":{"zh":"点图","en":"Point Chart"}},{"slug":"radar","icon":"radar","title":{"zh":"雷达图","en":"Radar Chart"}},{"slug":"funnel","icon":"funnel","title":{"zh":"漏斗图","en":"Funnel Chart"}},{"slug":"heatmap","icon":"heatmap","title":{"zh":"热力图","en":"Heatmap"}},{"slug":"box","icon":"box","title":{"zh":"箱型图","en":"Box Chart"}},{"slug":"candlestick","icon":"candlestick","title":{"zh":"烛形图","en":"K Chart"}},{"slug":"gauge","icon":"gauge","title":{"zh":"仪表盘","en":"Gauges"}},{"slug":"map","icon":"map","title":{"zh":"地图","en":"Maps"}},{"slug":"facet","icon":"facet","title":{"zh":"分面","en":"Facets"}},{"slug":"relation","icon":"relation","title":{"zh":"关系图","en":"Relation Chart"}},{"slug":"component","icon":"component","title":{"zh":"组件使用","en":"Chart Components"}},{"slug":"other","icon":"other","title":{"zh":"其他图表","en":"Other Chart"}}],"playground":{"container":null,"playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":null,"htmlCodeTemplate":"<!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"UTF-8\">\n            <title>{{title}}</title>\n          </head>\n          <body>\n            <div id=\"container\" />\n            <script src=\"https://gw.alipayobjects.com/os/lib/antv/g2/4.0.12/dist/g2.min.js\"></script>\n            <script src=\"https://gw.alipayobjects.com/os/antv/pkg/_antv.data-set-0.11.1/dist/data-set.js\"></script>\n            <script>\n            <!-- 浏览器引入，请使用全局命名空间 G2，如 new Chart() 改为 new G2.Chart，即可运行。 -->\n            {{code}}\n            </script>\n          </body>\n        </html>"}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/relation/relation"},"frontmatter":{"title":"Graph","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"relation/relation/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/relation/relation"},"frontmatter":{"title":"关系图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"relation/relation/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/radar/radar"},"frontmatter":{"title":"Radar Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"radar/radar/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"雷达图是以相同点开始的轴上表示的三个或更多个定量变量的二维图形的形式显示多变量数据的图形方法。轴的相对位置和角度通常是不知情的。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/radar/radar"},"frontmatter":{"title":"雷达图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"radar/radar/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/point/scatter"},"frontmatter":{"title":"Scatter Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Scatter Chart，也叫 X-Y 图，它将所有的数据以点的形式展现在笛卡尔坐标系上，以显示变量之间的相互影响程度，点的位置由变量的数值决定。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"通过观察散点图上数据点的分布情况，我们可以推断出变量间的相关性。如果变量之间不存在相互关系，那么在散点图上就会表现为随机分布的离散的点，如果存在某种相关性，那么大部分的数据点就会相对密集并以某种趋势呈现。数据的相关关系主要分为：正相关（两个变量值同时增长）、负相关（一个变量值增加另一个变量值下降）、不相关、线性相关、指数相关等，表现在散点图上的大致分布如下图所示。那些离点集群较远的点我们称为离群点或者异常点。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/point/scatter"},"frontmatter":{"title":"散点图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/pie/basic"},"frontmatter":{"title":"Basic Pie Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"pie/basic/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"饼图广泛得应用在各个领域，用于表示不同分类的占比情况，通过弧度大小来对比各种分类。饼图通过将一个圆饼按照分类的占比划分成多个区块，整个圆饼代表数据的总量，每个区块（圆弧）表示该分类占总体的比例大小，所有区块（圆弧）的加和等于 100%。可以很好地帮助用户快速了解数据的占比分配。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/pie/basic"},"frontmatter":{"title":"基础饼图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"pie/basic/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/other/other"},"frontmatter":{"title":"Others","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"other/other/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/other/other"},"frontmatter":{"title":"其他图表","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"other/other/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/map/map"},"frontmatter":{"title":"Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"map/map/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/map/map"},"frontmatter":{"title":"地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"map/map/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/line/basic"},"frontmatter":{"title":"Line Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/basic/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Line Chart，基础折线图。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"折线图用于显示数据在一个连续的时间间隔或者时间跨度上的变化，它的特点是反映事物随时间或有序类别而变化的趋势。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在折线图中，数据是递增还是递减、增减的速率、增减的规律（周期性、螺旋性等）、峰值等特征都可以清晰地反映出来。所以，折线图常用来分析数据随时间的变化趋势，也可用来分析多组数据随时间变化的相互作用和相互影响。例如可用来分析某类商品或是某几类相关的商品随时间变化的销售情况，从而进一步预测未来的销售情况。在折线图中，一般水平轴（X 轴）用来表示时间的推移，并且间隔相同；而垂直轴（Y 轴）代表不同时刻的数据的大小。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/line/basic"},"frontmatter":{"title":"基础折线图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/basic/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/interaction/element"},"frontmatter":{"title":"Element","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/element/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/interaction/element"},"frontmatter":{"title":"图形元素","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/element/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/heatmap/basic"},"frontmatter":{"title":"Heatmap","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/basic/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/heatmap/basic"},"frontmatter":{"title":"色块图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/basic/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gauge/gauge"},"frontmatter":{"title":"Gauge","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gauge/gauge/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"如何使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8","ariaLabel":"如何使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"如何使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"仪表盘(Gauge)是一种拟物化的图表，刻度表示度量，指针表示维度，指针角度表示数值。仪表盘图表就像汽车的速度表一样，有一个圆形的表盘及相应的刻度，有一个指针指向当前数值。目前很多的管理报表或报告上都是用这种图表，以直观的表现出某个指标的进度或实际情况。仪表盘的好处在于它能跟人们的常识结合，使大家马上能理解看什么、怎么看。拟物化的方式使图标变得更友好更人性化，正确使用可以提升用户体验。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gauge/gauge"},"frontmatter":{"title":"仪表盘","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gauge/gauge/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gallery/line"},"frontmatter":{"title":"Line Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/line/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gallery/line"},"frontmatter":{"title":"折线图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/line/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/funnel/funnel"},"frontmatter":{"title":"Funnel Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"funnel/funnel/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"漏斗图适用于业务流程比较规范、周期长、环节多的单流程单向分析，通过漏斗各环节业务数据的比较能够直观地发现和说明问题所在的环节，进而做出决策。漏斗图用梯形面积表示某个环节业务量与上一个环节之间的差异。漏斗图从上到下，有逻辑上的顺序关系，表现了随着业务流程的推进业务目标完成的情况。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/funnel/funnel"},"frontmatter":{"title":"漏斗图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"funnel/funnel/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/facet/facet"},"frontmatter":{"title":"Facet","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"facet/facet/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/facet/facet"},"frontmatter":{"title":"分面","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"facet/facet/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/component/annotation"},"frontmatter":{"title":"Annotation","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"component/annotation/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"chart.annotation()"}]}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/component/annotation"},"frontmatter":{"title":"Annotation","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"component/annotation/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/column/basic"},"frontmatter":{"title":"Basic Column Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"column/basic/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"基础柱状图，使用垂直的柱子显示类别之间的数值比较。其中一个轴表示需要对比的分类维度，另一个轴代表相应的数值。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"柱状图有别于直方图，柱状图无法显示数据在一个区间内的连续变化趋势。柱状图描述的是分类数据，回答的是每一个分类中『有多少？』这个问题。 需要注意的是，当柱状图显示的分类很多时会导致分类名层叠等显示问题。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/column/basic"},"frontmatter":{"title":"基础柱状图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"column/basic/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/candlestick/candlestick"},"frontmatter":{"title":"K Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"candlestick/candlestick/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"烛形图，原名 K 线图，蜡烛图，又称阴阳图、棒线、红黑线或蜡烛线，常用于展示股票交易数据。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"烛形图主要用于金融领域里展示股票，期货等交易数据，按照时间维度分为日 K 线、周 K 线、月 K 线。展示的数据需要满足 K 线构成的四要素：即开盘价、收盘价、最高价、最低价。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/candlestick/candlestick"},"frontmatter":{"title":"烛形图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"candlestick/candlestick/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/box/box"},"frontmatter":{"title":"Box Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"box/box/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"箱型图，又称盒须图、盒式图或箱线图，是一种用作显示一组数据分布情况的统计图。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果一个数据集中包含了一个分类变量和一个或者多个连续变量，那么你可能会想知道连续变量会如何随着分类变量水平的变化而变化，而箱形图就可以提供这种方法，它只用了 5 个数字对分布进行概括，即一组数据的最大值、最小值、中位数、下四分位数及上四分位数。对于数据集中的异常值，通常会以单独的点的形式绘制。箱形图可以水平或者垂直绘制。箱形图多用于数值统计，虽然相比于直方图和密度曲线较原始简单，但是它不需要占据过多的画布空间，空间利用率高，非常适用于比较多组数据的分布情况。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/box/box"},"frontmatter":{"title":"箱型图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"box/box/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/bar/basic"},"frontmatter":{"title":"Basic Bar Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"bar/basic/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"使用水平的柱子显示类别之间的数值比较。其中一个轴表示需要对比的分类维度，另一个轴代表相应的数值。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对比分类数据的数值大小，当分类情况过多时，柱状图的文本为了排布合理，需要进行旋转，不利于阅读，相比于纵向柱状图，横向柱状图更适用于此类分类较多的场景。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/bar/basic"},"frontmatter":{"title":"基础条形图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"bar/basic/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/area/basic"},"frontmatter":{"title":"Area Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"area/basic/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"面积图又叫区域图。 它是在折线图的基础之上形成的, 它将折线图中折线与自变量坐标轴之间的区域使用颜色或者纹理填充，这样一个填充区域我们叫做面积，颜色的填充可以更好的突出趋势信息。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"面积图用于强调数量随时间而变化的程度，也可用于引起人们对总值趋势的注意。他们最常用于表现趋势和关系,而不是传达特定的值。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/area/basic"},"frontmatter":{"title":"面积图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"area/basic/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/point/bubble"},"frontmatter":{"title":"Bubble Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/bubble/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/point/bubble"},"frontmatter":{"title":"气泡图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/bubble/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/pie/donut"},"frontmatter":{"title":"Donut Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"pie/donut/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"环图，其本质是饼图将中间区域挖空。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"饼图的整体性太强，我们会将注意力集中在比较饼图内各个扇形之间占整体比重的关系。但如果我们将两个饼图放在一起，饼图很难同时对比两个图。环图在解决上述问题时，采用了让我们更关注长度而不是面积的做法。这样我们就能相对简单的对比不同的环图。同时环图相对于饼图空间的利用率更高，比如我们可以使用它的空心区域显示文本信息，比如标题等。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/pie/donut"},"frontmatter":{"title":"环图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"pie/donut/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/line/step"},"frontmatter":{"title":"Step Line Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/step/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/interaction/component"},"frontmatter":{"title":"Components","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/component/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/interaction/component"},"frontmatter":{"title":"图表组件","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/component/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/heatmap/calendar"},"frontmatter":{"title":"Calendar Heatmap","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/calendar/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/heatmap/calendar"},"frontmatter":{"title":"日历热力图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/calendar/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gallery/column"},"frontmatter":{"title":"Column Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/column/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gallery/column"},"frontmatter":{"title":"柱状图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/column/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/component/label"},"frontmatter":{"title":"Label","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"component/label/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/component/label"},"frontmatter":{"title":"Label","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"component/label/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/column/dodge"},"frontmatter":{"title":"Grouped Column Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/column/dodge"},"frontmatter":{"title":"分组柱状图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/bar/dodge"},"frontmatter":{"title":"Grouped Bar Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"bar/dodge/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/bar/dodge"},"frontmatter":{"title":"分组条形图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"bar/dodge/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/area/stacked"},"frontmatter":{"title":"Stacked Area Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"area/stacked/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"和基本面积图一样，唯一的区别就是图上每一个数据集的起点不同，起点是基于前一个数据集的，用于显示每个数值所占大小随时间或类别变化的趋势线，展示的是部分与整体的关系。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"层叠面积图上的最大的面积代表了所有的数据量的总和，是一个整体。各个叠起来的面积表示各个数据量的大小，这些堆叠起来的面积图在表现大数据的总量分量的变化情况时格外有用，所以层叠面积图不适用于表示带有负值的数据集。非常适用于对比多变量随时间变化的情况。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/area/stacked"},"frontmatter":{"title":"堆叠面积图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"area/stacked/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/point/jitter"},"frontmatter":{"title":"Jitter Point Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"point/jitter/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/point/jitter"},"frontmatter":{"title":"扰动点图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"point/jitter/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/pie/rose"},"frontmatter":{"title":"Nightingale Rose Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"pie/rose/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"南丁格尔玫瑰图，又名鸡冠花图、极坐标区域图，是南丁格尔在克里米亚战争期间提交的一份关于士兵死伤的报告时发明的一种图表,是在极坐标下绘制的柱状图，使用圆弧的半径长短表示数据的大小（数量的多少）。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"由于半径和面积的关系是平方的关系，南丁格尔玫瑰图会将数据的比例大小夸大，尤其适合对比大小相近的数值；由于圆形有周期的特性，所以玫瑰图也适用于表示一个周期内的时间概念，比如星期、月份。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/pie/rose"},"frontmatter":{"title":"南丁格尔玫瑰图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"pie/rose/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"阶梯线图（也称为步骤图）是与线图相似的图表，但是线在数据点之间形成一系列步骤。当您要显示以不规则间隔发生的更改时，分阶线图可能很有用。例如，奶制品价格上涨，汽油，税率，利率等。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/line/step"},"frontmatter":{"title":"阶梯折线图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/step/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/line/path"},"frontmatter":{"title":"Path Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/path/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/line/path"},"frontmatter":{"title":"路径图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/path/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/interaction/brush"},"frontmatter":{"title":"Brush","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/brush/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/interaction/brush"},"frontmatter":{"title":"框选","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/brush/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/heatmap/heatmap"},"frontmatter":{"title":"Heatmap","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/heatmap/heatmap"},"frontmatter":{"title":"热力图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gallery/bar"},"frontmatter":{"title":"Bar Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/bar/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gallery/bar"},"frontmatter":{"title":"条形图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/bar/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/component/tooltip"},"frontmatter":{"title":"Tooltip","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"component/tooltip/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/component/tooltip"},"frontmatter":{"title":"Tooltip","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"component/tooltip/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/column/stack"},"frontmatter":{"title":"Stacked Column Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"column/stack/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/column/stack"},"frontmatter":{"title":"堆叠柱状图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"column/stack/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/bar/stack"},"frontmatter":{"title":"Stacked Bar Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"bar/stack/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/bar/stack"},"frontmatter":{"title":"堆叠条形图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"bar/stack/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/area/range"},"frontmatter":{"title":"Range Area Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"area/range/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/area/range"},"frontmatter":{"title":"区间面积图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"area/range/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/pie/nested"},"frontmatter":{"title":"Nested Pie Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"pie/nested/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/pie/nested"},"frontmatter":{"title":"嵌套饼图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"pie/nested/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/line/multiple"},"frontmatter":{"title":"kernel smooth regression line chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"line/multiple/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/line/multiple"},"frontmatter":{"title":"核函数概率密度回归曲线","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"line/multiple/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/interaction/others"},"frontmatter":{"title":"Others","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/others/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/interaction/others"},"frontmatter":{"title":"其他","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/others/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gallery/pie"},"frontmatter":{"title":"Pie Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/pie/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gallery/pie"},"frontmatter":{"title":"饼图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/pie/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/column/dodge-stack"},"frontmatter":{"title":"Grouped-stacked Column Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge-stack/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/column/dodge-stack"},"frontmatter":{"title":"分组层叠柱状图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge-stack/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/area/streamgraph"},"frontmatter":{"title":"Streamgraph","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"area/streamgraph/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/area/streamgraph"},"frontmatter":{"title":"Streamgraph","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"area/streamgraph/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gallery/area"},"frontmatter":{"title":"Area Chart","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/area/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gallery/area"},"frontmatter":{"title":"面积图","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/area/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/column/histogram"},"frontmatter":{"title":"Histogram","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"column/histogram/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"直方图牵涉统计学的概念，首先要对数据进行分组，然后统计每个分组内数据元的数量。 在平面直角坐标系中，横轴标出每个组的端点，纵轴表示频数，每个矩形的高代表对应的频数，称这样的统计图为频数分布直方图。频数分布直方图需要经过频数乘以组距的计算过程才能得出每个分组的数量，同一个直方图的组距是一个固定不变的值，所以如果直接用纵轴表示数量，每个矩形的高代表对应的数据元数量，既能保持分布状态不变，又能直观的看出每个分组的数量。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"何时使用","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8","ariaLabel":"何时使用 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"何时使用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"直方图主要用于显示各组频数或数量分布的情况以及各组之间频数或数量的差别，通过直方图还可以观察和估计哪些数据比较集中，异常或者孤立的数据分布在何处。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/column/histogram"},"frontmatter":{"title":"直方图","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"column/histogram/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gallery/facet"},"frontmatter":{"title":"Facet","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/facet/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gallery/facet"},"frontmatter":{"title":"分面","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/facet/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gallery/dynamic"},"frontmatter":{"title":"Dynamic Charts","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/dynamic/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gallery/dynamic"},"frontmatter":{"title":"动态图表","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/dynamic/index.zh.md"}}}]}},"pageContext":{"exampleSections":{"examples":[{"relativePath":"other/other/demo/bullet-graph.ts","absolutePath":"/Users/pd/Documents/code/github/G2/examples/other/other/demo/bullet-graph.ts","order":0,"filename":"bullet-graph.ts","title":{"zh":"子弹图","en":"bullet graph"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*VaQ5S7HpOMoAAAAAAAAAAABkARQnAQ","source":"import { Chart } from '@antv/g2';\n\nconst data = [\n  { title: 'Revenue', subtitle: 'US$, in thousands', ranges: [150, 225, 300], actual: 270, target: 250 },\n  { title: 'Profit', subtitle: '%', ranges: [20, 25, 30], actual: 23, target: 26 },\n  { title: 'Order Size', subtitle: 'US$, average', ranges: [350, 500, 600], actual: 100, target: 550 },\n  { title: 'New Customers', subtitle: 'count', ranges: [1400, 2000, 2500], actual: 1650, target: 2100 },\n  { title: 'Satisfaction', subtitle: 'out of 5', ranges: [3.5, 4.25, 5], actual: 3.2, target: 4.4 }\n];\nconst chart = new Chart({\n  container: 'container',\n  autoFit: true,\n  height: 500,\n});\nchart.legend(false); // 不展示图例\n\nlet y = 0;\nconst yGap = 0.1;\nfor (let i = 0, l = data.length; i < l; i++) {\n  const ranges = data[i].ranges;\n  const view = chart.createView({\n    region: {\n      start: {\n        x: 0,\n        y\n      },\n      end: {\n        x: 1,\n        y: y + yGap\n      }\n    },\n    padding: [15, 120, 10]\n  });\n  view.data([data[i]]);\n  view.scale({\n    actual: {\n      min: 0,\n      max: ranges[2],\n    },\n    target: {\n      min: 0,\n      max: ranges[2],\n    }\n  });\n  view.coordinate().transpose();\n  view.axis('target', false);\n  view.axis('actual', {\n    position: 'right'\n  });\n  view.point()\n    .position('title*target')\n    .color('#square')\n    .shape('line')\n    .size(12)\n    .style({\n      lineWidth: 2\n    });\n  view.interval()\n    .position('title*actual')\n    .color('#223273')\n    .size(15);\n  // 差\n  view.annotation().region({\n    start: ['start', 0],\n    end: ['end', ranges[0]],\n    style: {\n      fill: '#FFA39E',\n      fillOpacity: 0.85\n    }\n  });\n  // 良\n  view.annotation().region({\n    start: ['start', ranges[0]],\n    end: ['end', ranges[1]],\n    style: {\n      fill: '#FFD591',\n      fillOpacity: 0.85\n    }\n  });\n  // 优\n  view.annotation().region({\n    start: ['start', ranges[1]],\n    end: ['end', ranges[2]],\n    style: {\n      fill: '#A7E8B4',\n      fillOpacity: 0.85\n    }\n  });\n  y += yGap + 0.125;\n}\nchart.legend({\n  custom: true,\n  items: [\n    {\n      value: '差',\n      name: '差',\n      marker: { symbol: 'square', style: { fill: '#FFA39E', r: 5 } }\n    },\n    {\n      value: '良',\n      name: '良',\n      marker: { symbol: 'square', style: { fill: '#FFD591', r: 5 } }\n    },\n    {\n      value: '优',\n      name: '优',\n      marker: { symbol: 'square', style: { fill: '#A7E8B4', r: 5 } }\n    },\n    {\n      value: '实际值',\n      name: '实际值',\n      marker: { symbol: 'square', style: { fill: '#223273', r: 5 } }\n    },\n    {\n      value: '目标值',\n      name: '目标值',\n      marker: { symbol: 'line', style: { stroke: '#262626', r: 5 } }\n    }\n  ]\n});\n\nchart.removeInteraction('legend-filter'); // 自定义图例，移除默认的分类图例筛选交互\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g2);\n    global.bulletGraph = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g) {\n  \"use strict\";\n\n  var data = [{\n    title: 'Revenue',\n    subtitle: 'US$, in thousands',\n    ranges: [150, 225, 300],\n    actual: 270,\n    target: 250\n  }, {\n    title: 'Profit',\n    subtitle: '%',\n    ranges: [20, 25, 30],\n    actual: 23,\n    target: 26\n  }, {\n    title: 'Order Size',\n    subtitle: 'US$, average',\n    ranges: [350, 500, 600],\n    actual: 100,\n    target: 550\n  }, {\n    title: 'New Customers',\n    subtitle: 'count',\n    ranges: [1400, 2000, 2500],\n    actual: 1650,\n    target: 2100\n  }, {\n    title: 'Satisfaction',\n    subtitle: 'out of 5',\n    ranges: [3.5, 4.25, 5],\n    actual: 3.2,\n    target: 4.4\n  }];\n  var chart = new _g.Chart({\n    container: 'container',\n    autoFit: true,\n    height: 500\n  });\n  chart.legend(false); // 不展示图例\n\n  var y = 0;\n  var yGap = 0.1;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var ranges = data[i].ranges;\n    var view = chart.createView({\n      region: {\n        start: {\n          x: 0,\n          y: y\n        },\n        end: {\n          x: 1,\n          y: y + yGap\n        }\n      },\n      padding: [15, 120, 10]\n    });\n    view.data([data[i]]);\n    view.scale({\n      actual: {\n        min: 0,\n        max: ranges[2]\n      },\n      target: {\n        min: 0,\n        max: ranges[2]\n      }\n    });\n    view.coordinate().transpose();\n    view.axis('target', false);\n    view.axis('actual', {\n      position: 'right'\n    });\n    view.point().position('title*target').color('#square').shape('line').size(12).style({\n      lineWidth: 2\n    });\n    view.interval().position('title*actual').color('#223273').size(15); // 差\n\n    view.annotation().region({\n      start: ['start', 0],\n      end: ['end', ranges[0]],\n      style: {\n        fill: '#FFA39E',\n        fillOpacity: 0.85\n      }\n    }); // 良\n\n    view.annotation().region({\n      start: ['start', ranges[0]],\n      end: ['end', ranges[1]],\n      style: {\n        fill: '#FFD591',\n        fillOpacity: 0.85\n      }\n    }); // 优\n\n    view.annotation().region({\n      start: ['start', ranges[1]],\n      end: ['end', ranges[2]],\n      style: {\n        fill: '#A7E8B4',\n        fillOpacity: 0.85\n      }\n    });\n    y += yGap + 0.125;\n  }\n\n  chart.legend({\n    custom: true,\n    items: [{\n      value: '差',\n      name: '差',\n      marker: {\n        symbol: 'square',\n        style: {\n          fill: '#FFA39E',\n          r: 5\n        }\n      }\n    }, {\n      value: '良',\n      name: '良',\n      marker: {\n        symbol: 'square',\n        style: {\n          fill: '#FFD591',\n          r: 5\n        }\n      }\n    }, {\n      value: '优',\n      name: '优',\n      marker: {\n        symbol: 'square',\n        style: {\n          fill: '#A7E8B4',\n          r: 5\n        }\n      }\n    }, {\n      value: '实际值',\n      name: '实际值',\n      marker: {\n        symbol: 'square',\n        style: {\n          fill: '#223273',\n          r: 5\n        }\n      }\n    }, {\n      value: '目标值',\n      name: '目标值',\n      marker: {\n        symbol: 'line',\n        style: {\n          stroke: '#262626',\n          r: 5\n        }\n      }\n    }]\n  });\n  chart.removeInteraction('legend-filter'); // 自定义图例，移除默认的分类图例筛选交互\n\n  chart.render();\n});"},{"relativePath":"other/other/demo/column-error.ts","absolutePath":"/Users/pd/Documents/code/github/G2/examples/other/other/demo/column-error.ts","order":1,"filename":"column-error.ts","title":{"zh":"柱状图-ErrorBar","en":"error column chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*btmoS5Zb7B0AAAAAAAAAAABkARQnAQ","source":"import { Chart } from '@antv/g2';\n\nconst data = [\n  { name: '类别一', value: 150, error: 6 },\n  { name: '类别二', value: 120, error: 10 },\n  { name: '类别三', value: 170, error: 5 },\n  { name: '类别四', value: 170, error: 5 }\n];\n\ndata.forEach((obj) => {\n  obj.range = [obj.value - obj.error, obj.value + obj.error];\n});\n\nconst chart = new Chart({\n  container: 'container',\n  autoFit: true,\n  height: 500\n});\nchart.legend(false);\nchart.data(data);\nchart.scale({\n  value: {\n    min: 0,\n    max: 200\n  },\n  range: {\n    min: 0,\n    max: 200\n  }\n});\n\nchart.tooltip({\n  showMarkers: false\n});\n\nchart.interval()\n  .position('name*value')\n  .color('name')\n  .style({\n    fillOpacity: 0.7\n  });\n\nchart.interval()\n  .position('name*range')\n  .color('name')\n  .size(40)\n  .shape('tick');\n\nchart.interaction('active-region');\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g2);\n    global.columnError = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g) {\n  \"use strict\";\n\n  var data = [{\n    name: '类别一',\n    value: 150,\n    error: 6\n  }, {\n    name: '类别二',\n    value: 120,\n    error: 10\n  }, {\n    name: '类别三',\n    value: 170,\n    error: 5\n  }, {\n    name: '类别四',\n    value: 170,\n    error: 5\n  }];\n  data.forEach(function (obj) {\n    obj.range = [obj.value - obj.error, obj.value + obj.error];\n  });\n  var chart = new _g.Chart({\n    container: 'container',\n    autoFit: true,\n    height: 500\n  });\n  chart.legend(false);\n  chart.data(data);\n  chart.scale({\n    value: {\n      min: 0,\n      max: 200\n    },\n    range: {\n      min: 0,\n      max: 200\n    }\n  });\n  chart.tooltip({\n    showMarkers: false\n  });\n  chart.interval().position('name*value').color('name').style({\n    fillOpacity: 0.7\n  });\n  chart.interval().position('name*range').color('name').size(40).shape('tick');\n  chart.interaction('active-region');\n  chart.render();\n});"},{"relativePath":"other/other/demo/double-axes.ts","absolutePath":"/Users/pd/Documents/code/github/G2/examples/other/other/demo/double-axes.ts","order":2,"filename":"double-axes.ts","title":{"zh":"双轴图表","en":"double axes"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*ZdEEQrDnBb0AAAAAAAAAAABkARQnAQ","source":"import { Chart } from '@antv/g2';\n\nconst data = [\n  { time: '10:10', call: 4, waiting: 2, people: 2 },\n  { time: '10:15', call: 2, waiting: 6, people: 3 },\n  { time: '10:20', call: 13, waiting: 2, people: 5 },\n  { time: '10:25', call: 9, waiting: 9, people: 1 },\n  { time: '10:30', call: 5, waiting: 2, people: 3 },\n  { time: '10:35', call: 8, waiting: 2, people: 1 },\n  { time: '10:40', call: 13, waiting: 1, people: 2 }\n];\n\nconst chart = new Chart({\n  container: 'container',\n  autoFit: true,\n  height: 500\n});\nchart.data(data);\nchart.scale({\n  people: {\n    min: 0,\n    max: 10,\n  },\n  waiting: {\n    min: 0,\n    max: 10\n  }\n});\nchart.legend({\n  custom: true,\n  items: [\n    { value: 'waiting', name: 'waiting', marker: { symbol: 'square', style: { fill: '#3182bd', r: 5 } } },\n    { value: 'people', name: 'people', marker: { symbol: 'hyphen', style: { stroke: '#fdae6b', r: 5, lineWidth: 3 } } }\n  ],\n});\nchart.axis('people', {\n  grid: null,\n  title: {\n    style: {\n      fill: '#fdae6b'\n    }\n  },\n  label: {\n    style: {\n      fill: '#fdae6b'\n    }\n  }\n});\nchart.axis('waiting', {\n  title: {}\n});\nchart.tooltip({\n  shared: true,\n});\nchart.interval()\n  .position('time*waiting')\n  .color('#3182bd');\nchart.line()\n  .position('time*people')\n  .color('#fdae6b')\n  .size(3)\n  .shape('smooth');\nchart.point()\n  .position('time*people')\n  .color('#fdae6b')\n  .size(3)\n  .shape('circle');\n\nchart.interaction('active-region');\nchart.removeInteraction('legend-filter'); // 自定义图例，移除默认的分类图例筛选交互\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g2);\n    global.doubleAxes = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g) {\n  \"use strict\";\n\n  var data = [{\n    time: '10:10',\n    call: 4,\n    waiting: 2,\n    people: 2\n  }, {\n    time: '10:15',\n    call: 2,\n    waiting: 6,\n    people: 3\n  }, {\n    time: '10:20',\n    call: 13,\n    waiting: 2,\n    people: 5\n  }, {\n    time: '10:25',\n    call: 9,\n    waiting: 9,\n    people: 1\n  }, {\n    time: '10:30',\n    call: 5,\n    waiting: 2,\n    people: 3\n  }, {\n    time: '10:35',\n    call: 8,\n    waiting: 2,\n    people: 1\n  }, {\n    time: '10:40',\n    call: 13,\n    waiting: 1,\n    people: 2\n  }];\n  var chart = new _g.Chart({\n    container: 'container',\n    autoFit: true,\n    height: 500\n  });\n  chart.data(data);\n  chart.scale({\n    people: {\n      min: 0,\n      max: 10\n    },\n    waiting: {\n      min: 0,\n      max: 10\n    }\n  });\n  chart.legend({\n    custom: true,\n    items: [{\n      value: 'waiting',\n      name: 'waiting',\n      marker: {\n        symbol: 'square',\n        style: {\n          fill: '#3182bd',\n          r: 5\n        }\n      }\n    }, {\n      value: 'people',\n      name: 'people',\n      marker: {\n        symbol: 'hyphen',\n        style: {\n          stroke: '#fdae6b',\n          r: 5,\n          lineWidth: 3\n        }\n      }\n    }]\n  });\n  chart.axis('people', {\n    grid: null,\n    title: {\n      style: {\n        fill: '#fdae6b'\n      }\n    },\n    label: {\n      style: {\n        fill: '#fdae6b'\n      }\n    }\n  });\n  chart.axis('waiting', {\n    title: {}\n  });\n  chart.tooltip({\n    shared: true\n  });\n  chart.interval().position('time*waiting').color('#3182bd');\n  chart.line().position('time*people').color('#fdae6b').size(3).shape('smooth');\n  chart.point().position('time*people').color('#fdae6b').size(3).shape('circle');\n  chart.interaction('active-region');\n  chart.removeInteraction('legend-filter'); // 自定义图例，移除默认的分类图例筛选交互\n\n  chart.render();\n});"},{"relativePath":"other/other/demo/kagi-chart.ts","absolutePath":"/Users/pd/Documents/code/github/G2/examples/other/other/demo/kagi-chart.ts","order":4,"filename":"kagi-chart.ts","title":{"zh":"卡吉图","en":"kagi chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*kJxhRomBRqMAAAAAAAAAAABkARQnAQ","source":"import { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/kagi.json')\n  .then(res => res.json())\n  .then(data => {\n    // 获取卡吉图数据点\n    const kagiData = getKagiData(data, 'date', 'value');\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500\n    });\n    chart.data(kagiData);\n    chart.scale({\n      date: {\n        type: 'cat',\n        tickCount: 10,\n        range: [0, 1]\n      },\n      value: {\n        nice: true\n      }\n    });\n    chart.tooltip({\n      showCrosshairs: true,\n      crosshairs: 'x'\n    });\n    chart.path({\n      generatePoints: true\n    })\n      .position('date*value')\n      .color('type', val => {\n        if (val === 'pos') {\n          return '#f04864';\n        }\n        return '#2fc25b';\n      })\n      .size('type', val => {\n        if (val === 'pos') {\n          return 2;\n        }\n        return 1;\n      });\n    chart.render();\n  });\n/**\n * 获取卡吉图数据点\n * @param  {Array} points 原始数据点\n * @param  {String} x x维度字段名\n * @param  {String} y y维度字段名\n * @return {Array} data 卡吉图数据点\n **/\nfunction getKagiData(points, x, y) {\n  // 初始最小值\n  let min = points[0][y];\n  // 初始最大值\n  let max = points[0][y];\n  // 初始绘制起点\n  let start = points[0];\n  // 阳线和阴线判断标志\n  let isPos = points[1][y] >= points[0][y];\n  // 初始绘制方向，1为向上，－1为向下\n  let direction = isPos ? 1 : -1;\n  // 阈值，默认为最大值的4%\n  const maxValue = getMax(points, y);\n  const threshold = maxValue * 0.04;\n  // 阴线数组\n  const negPath = [];\n  // 阳线数组\n  const posPath = [];\n  const tmp1 = {};\n  tmp1[x] = start[x];\n  tmp1[y] = start[y];\n  pushPoint(tmp1, isPos, posPath, negPath, x, y);\n  if (points.length > 1) {\n    for (let i = 0; i <= points.length - 1; i++) {\n      // 浮动超过阈值时执行算法\n      if (Math.abs(start[y] - points[i][y]) > threshold) {\n        if (direction > 0) {\n          if (points[i][y] >= start[y]) {\n            isPos = getVerticalPoints(start, points[i], max, direction, negPath, posPath, isPos, x, y);\n            start[y] = points[i][y];\n          } else {\n            const tmp2 = {};\n            tmp2[x] = points[i][x];\n            tmp2[y] = start[y];\n            pushPoint(tmp2, isPos, posPath, negPath, x, y);\n            start[x] = points[i][x];\n            direction = -1; // 转向\n            isPos = getVerticalPoints(start, points[i], min, direction, negPath, posPath, isPos, x, y);\n            max = start[y]; // 更新当前最高点\n            start = points[i]; // 更新当前绘制起点\n          }\n        } else {\n          if (points[i][y] < start[y]) {\n            isPos = getVerticalPoints(start, points[i], min, direction, negPath, posPath, isPos, x, y);\n            start[y] = points[i][y];\n          } else {\n            const tmp3 = {};\n            tmp3[x] = points[i][x];\n            tmp3[y] = start[y];\n            pushPoint(tmp3, isPos, posPath, negPath, x, y);\n            start[x] = points[i][x];\n            direction = 1;\n            isPos = getVerticalPoints(start, points[i], max, direction, negPath, posPath, isPos, x, y);\n            min = start[y]; // 更新当前最低点\n            start = points[i];\n          }\n        }\n      }\n    }\n  }\n  return posPath.concat(negPath);\n}\n/**\n * 获取卡吉图垂直线数据点\n * @param  {Array} start 起点坐标\n * @param  {Array} end 终点坐标\n * @param  {Number} changePoint 转折点y坐标\n * @param  {Number} direction 绘制方向\n * @param  {Array} negPath 阴线数组\n * @param  {Array} posPath 阳线数组\n * @param  {Boolean} isPos 是否阳线标志位\n * @param  {String} x x维度字段名\n * @param  {String} y y维度字段名\n * @return  {Boolean} isPos 是否阳线标志位\n **/\nfunction getVerticalPoints(start, end, changePoint, direction, negPath, posPath, isPos, x, y) {\n  // 阳线和阴线相互转换的判断条件\n  const condition = direction > 0 ? (end[y] > changePoint) && (start[y] < changePoint) && !isPos : (end[y] < changePoint) && (start[y] > changePoint) && isPos;\n  const tmp1 = {};\n  tmp1[x] = start[x];\n  tmp1[y] = changePoint;\n  const tmp2 = {};\n  tmp2[x] = start[x];\n  tmp2[y] = end[y];\n  if (condition) {\n    pushPoint(tmp1, isPos, posPath, negPath, x, y, true);\n    isPos = !isPos;\n    pushPoint(tmp2, isPos, posPath, negPath, x, y);\n  } else {\n    pushPoint(tmp2, isPos, posPath, negPath, x, y);\n  }\n  return isPos;\n}\n\nfunction pushPoint(point, isPos, posPath, negPath, x, y, isChangePoint = false) {\n  const tmpPoint = {};\n  tmpPoint[x] = point[x];\n  tmpPoint[y] = isChangePoint ? point[y] : null; // 转折点阳线和阴线都有数据，非转折点阳线或阴线的数据点为空\n  if (isPos) {\n    point.type = 'pos';\n    posPath.push(point);\n    tmpPoint.type = 'neg';\n    negPath.push(tmpPoint);\n  } else {\n    point.type = 'neg';\n    negPath.push(point);\n    tmpPoint.type = 'pos';\n    posPath.push(tmpPoint);\n  }\n}\n\nfunction getMax(points, y) {\n  let max = points[points.length - 1][y];\n  if (points.length > 0) {\n    for (let i = points.length - 1; i >= 0; i--) {\n      max = points[i][y] > max ? points[i][y] : max;\n    }\n  }\n  return max;\n}\n\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g2);\n    global.kagiChart = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/kagi.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    // 获取卡吉图数据点\n    var kagiData = getKagiData(data, 'date', 'value');\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500\n    });\n    chart.data(kagiData);\n    chart.scale({\n      date: {\n        type: 'cat',\n        tickCount: 10,\n        range: [0, 1]\n      },\n      value: {\n        nice: true\n      }\n    });\n    chart.tooltip({\n      showCrosshairs: true,\n      crosshairs: 'x'\n    });\n    chart.path({\n      generatePoints: true\n    }).position('date*value').color('type', function (val) {\n      if (val === 'pos') {\n        return '#f04864';\n      }\n\n      return '#2fc25b';\n    }).size('type', function (val) {\n      if (val === 'pos') {\n        return 2;\n      }\n\n      return 1;\n    });\n    chart.render();\n  });\n  /**\n   * 获取卡吉图数据点\n   * @param  {Array} points 原始数据点\n   * @param  {String} x x维度字段名\n   * @param  {String} y y维度字段名\n   * @return {Array} data 卡吉图数据点\n   **/\n\n  function getKagiData(points, x, y) {\n    // 初始最小值\n    var min = points[0][y]; // 初始最大值\n\n    var max = points[0][y]; // 初始绘制起点\n\n    var start = points[0]; // 阳线和阴线判断标志\n\n    var isPos = points[1][y] >= points[0][y]; // 初始绘制方向，1为向上，－1为向下\n\n    var direction = isPos ? 1 : -1; // 阈值，默认为最大值的4%\n\n    var maxValue = getMax(points, y);\n    var threshold = maxValue * 0.04; // 阴线数组\n\n    var negPath = []; // 阳线数组\n\n    var posPath = [];\n    var tmp1 = {};\n    tmp1[x] = start[x];\n    tmp1[y] = start[y];\n    pushPoint(tmp1, isPos, posPath, negPath, x, y);\n\n    if (points.length > 1) {\n      for (var i = 0; i <= points.length - 1; i++) {\n        // 浮动超过阈值时执行算法\n        if (Math.abs(start[y] - points[i][y]) > threshold) {\n          if (direction > 0) {\n            if (points[i][y] >= start[y]) {\n              isPos = getVerticalPoints(start, points[i], max, direction, negPath, posPath, isPos, x, y);\n              start[y] = points[i][y];\n            } else {\n              var tmp2 = {};\n              tmp2[x] = points[i][x];\n              tmp2[y] = start[y];\n              pushPoint(tmp2, isPos, posPath, negPath, x, y);\n              start[x] = points[i][x];\n              direction = -1; // 转向\n\n              isPos = getVerticalPoints(start, points[i], min, direction, negPath, posPath, isPos, x, y);\n              max = start[y]; // 更新当前最高点\n\n              start = points[i]; // 更新当前绘制起点\n            }\n          } else {\n            if (points[i][y] < start[y]) {\n              isPos = getVerticalPoints(start, points[i], min, direction, negPath, posPath, isPos, x, y);\n              start[y] = points[i][y];\n            } else {\n              var tmp3 = {};\n              tmp3[x] = points[i][x];\n              tmp3[y] = start[y];\n              pushPoint(tmp3, isPos, posPath, negPath, x, y);\n              start[x] = points[i][x];\n              direction = 1;\n              isPos = getVerticalPoints(start, points[i], max, direction, negPath, posPath, isPos, x, y);\n              min = start[y]; // 更新当前最低点\n\n              start = points[i];\n            }\n          }\n        }\n      }\n    }\n\n    return posPath.concat(negPath);\n  }\n  /**\n   * 获取卡吉图垂直线数据点\n   * @param  {Array} start 起点坐标\n   * @param  {Array} end 终点坐标\n   * @param  {Number} changePoint 转折点y坐标\n   * @param  {Number} direction 绘制方向\n   * @param  {Array} negPath 阴线数组\n   * @param  {Array} posPath 阳线数组\n   * @param  {Boolean} isPos 是否阳线标志位\n   * @param  {String} x x维度字段名\n   * @param  {String} y y维度字段名\n   * @return  {Boolean} isPos 是否阳线标志位\n   **/\n\n\n  function getVerticalPoints(start, end, changePoint, direction, negPath, posPath, isPos, x, y) {\n    // 阳线和阴线相互转换的判断条件\n    var condition = direction > 0 ? end[y] > changePoint && start[y] < changePoint && !isPos : end[y] < changePoint && start[y] > changePoint && isPos;\n    var tmp1 = {};\n    tmp1[x] = start[x];\n    tmp1[y] = changePoint;\n    var tmp2 = {};\n    tmp2[x] = start[x];\n    tmp2[y] = end[y];\n\n    if (condition) {\n      pushPoint(tmp1, isPos, posPath, negPath, x, y, true);\n      isPos = !isPos;\n      pushPoint(tmp2, isPos, posPath, negPath, x, y);\n    } else {\n      pushPoint(tmp2, isPos, posPath, negPath, x, y);\n    }\n\n    return isPos;\n  }\n\n  function pushPoint(point, isPos, posPath, negPath, x, y) {\n    var isChangePoint = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    var tmpPoint = {};\n    tmpPoint[x] = point[x];\n    tmpPoint[y] = isChangePoint ? point[y] : null; // 转折点阳线和阴线都有数据，非转折点阳线或阴线的数据点为空\n\n    if (isPos) {\n      point.type = 'pos';\n      posPath.push(point);\n      tmpPoint.type = 'neg';\n      negPath.push(tmpPoint);\n    } else {\n      point.type = 'neg';\n      negPath.push(point);\n      tmpPoint.type = 'pos';\n      posPath.push(tmpPoint);\n    }\n  }\n\n  function getMax(points, y) {\n    var max = points[points.length - 1][y];\n\n    if (points.length > 0) {\n      for (var i = points.length - 1; i >= 0; i--) {\n        max = points[i][y] > max ? points[i][y] : max;\n      }\n    }\n\n    return max;\n  }\n});"},{"relativePath":"other/other/demo/punch-card.ts","absolutePath":"/Users/pd/Documents/code/github/G2/examples/other/other/demo/punch-card.ts","order":5,"filename":"punch-card.ts","title":{"zh":"Punch Card","en":"Punch Card"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*E_xoSYVrPB4AAAAAAAAAAABkARQnAQ","source":"import { Chart } from '@antv/g2';\n\nconst data = [[0, 0, 10], [0, 1, 5], [0, 2, 17], [0, 3, 0], [0, 4, 3], [0, 5, 0], [0, 6, 0], [0, 7, 0], [0, 8, 5], [0, 9, 8], [0, 10, 12], [0, 11, 14], [0, 12, 3], [0, 13, 11], [0, 14, 36], [0, 15, 40], [0, 16, 30], [0, 17, 34], [0, 18, 23], [0, 19, 10], [0, 20, 10], [0, 21, 12], [0, 22, 9], [0, 23, 7], [1, 0, 15], [1, 1, 2], [1, 2, 0], [1, 3, 0], [1, 4, 1], [1, 5, 6], [1, 6, 0], [1, 7, 2], [1, 8, 4], [1, 9, 9], [1, 10, 55], [1, 11, 113], [1, 12, 55], [1, 13, 30], [1, 14, 90], [1, 15, 107], [1, 16, 134], [1, 17, 103], [1, 18, 63], [1, 19, 60], [1, 20, 43], [1, 21, 28], [1, 22, 27], [1, 23, 9], [2, 0, 17], [2, 1, 6], [2, 2, 0], [2, 3, 1], [2, 4, 3], [2, 5, 1], [2, 6, 0], [2, 7, 0], [2, 8, 1], [2, 9, 9], [2, 10, 29], [2, 11, 77], [2, 12, 53], [2, 13, 35], [2, 14, 102], [2, 15, 105], [2, 16, 115], [2, 17, 115], [2, 18, 81], [2, 19, 46], [2, 20, 56], [2, 21, 32], [2, 22, 27], [2, 23, 25], [3, 0, 13], [3, 1, 10], [3, 2, 1], [3, 3, 0], [3, 4, 2], [3, 5, 6], [3, 6, 0], [3, 7, 0], [3, 8, 1], [3, 9, 15], [3, 10, 45], [3, 11, 105], [3, 12, 54], [3, 13, 35], [3, 14, 98], [3, 15, 113], [3, 16, 125], [3, 17, 145], [3, 18, 84], [3, 19, 74], [3, 20, 78], [3, 21, 50], [3, 22, 43], [3, 23, 21], [4, 0, 9], [4, 1, 2], [4, 2, 3], [4, 3, 0], [4, 4, 7], [4, 5, 1], [4, 6, 2], [4, 7, 1], [4, 8, 8], [4, 9, 23], [4, 10, 48], [4, 11, 97], [4, 12, 65], [4, 13, 36], [4, 14, 75], [4, 15, 129], [4, 16, 98], [4, 17, 116], [4, 18, 70], [4, 19, 47], [4, 20, 48], [4, 21, 57], [4, 22, 31], [4, 23, 26], [5, 0, 12], [5, 1, 9], [5, 2, 0], [5, 3, 14], [5, 4, 0], [5, 5, 0], [5, 6, 1], [5, 7, 0], [5, 8, 1], [5, 9, 21], [5, 10, 50], [5, 11, 82], [5, 12, 45], [5, 13, 41], [5, 14, 101], [5, 15, 135], [5, 16, 102], [5, 17, 99], [5, 18, 64], [5, 19, 19], [5, 20, 24], [5, 21, 27], [5, 22, 38], [5, 23, 27], [6, 0, 17], [6, 1, 10], [6, 2, 14], [6, 3, 0], [6, 4, 1], [6, 5, 1], [6, 6, 0], [6, 7, 1], [6, 8, 4], [6, 9, 7], [6, 10, 11], [6, 11, 10], [6, 12, 2], [6, 13, 13], [6, 14, 28], [6, 15, 47], [6, 16, 39], [6, 17, 36], [6, 18, 25], [6, 19, 7], [6, 20, 14], [6, 21, 12], [6, 22, 1], [6, 23, 3]];\nconst source = [];\nfor (let i = 0; i < 7; i++) {\n  for (let j = 0; j < 24; j++) {\n    const item = {};\n    item.weekday = i;\n    item.hour = data[i * 24 + j][1];\n    item.commits = data[i * 24 + j][2];\n    source.push(item);\n  }\n}\nconst chart = new Chart({\n  container: 'container',\n  autoFit: false,\n  width: 600,\n  height: 500,\n});\nchart.data(source);\nchart.scale({\n  weekday: {\n    type: 'cat',\n    values: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  },\n  hour: {\n    type: 'cat',\n    values: ['12a', '1a', '2a', '3a', '4a', '5a', '6a', '7a', '8a', '9a', '10a', '11a', '12p', '1p', '2p', '3p', '4p', '5p', '6p', '7p', '8p', '9p', '10p', '11p']\n  }\n});\nchart.tooltip({\n  showTitle: false,\n  showMarkers: false\n});\nchart.legend(false);\nchart.axis('weekday', {\n  line: null,\n  tickLine: null,\n  grid: null,\n  label: {\n    style: {\n      fontSize: 14,\n      fill: '#555'\n    }\n  }\n});\nchart.axis('hour', {\n  line: {\n    style: {\n      stroke: '#eee',\n      lineWidth: 1\n    }\n  },\n  tickLine: {\n    length: -10\n  }\n});\nchart.point()\n  .position('hour*weekday')\n  .size('commits', [2, 10])\n  .shape('circle')\n  .color('#bfbfbf');\n\nchart.interaction('element-active');\n\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g2);\n    global.punchCard = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g) {\n  \"use strict\";\n\n  var data = [[0, 0, 10], [0, 1, 5], [0, 2, 17], [0, 3, 0], [0, 4, 3], [0, 5, 0], [0, 6, 0], [0, 7, 0], [0, 8, 5], [0, 9, 8], [0, 10, 12], [0, 11, 14], [0, 12, 3], [0, 13, 11], [0, 14, 36], [0, 15, 40], [0, 16, 30], [0, 17, 34], [0, 18, 23], [0, 19, 10], [0, 20, 10], [0, 21, 12], [0, 22, 9], [0, 23, 7], [1, 0, 15], [1, 1, 2], [1, 2, 0], [1, 3, 0], [1, 4, 1], [1, 5, 6], [1, 6, 0], [1, 7, 2], [1, 8, 4], [1, 9, 9], [1, 10, 55], [1, 11, 113], [1, 12, 55], [1, 13, 30], [1, 14, 90], [1, 15, 107], [1, 16, 134], [1, 17, 103], [1, 18, 63], [1, 19, 60], [1, 20, 43], [1, 21, 28], [1, 22, 27], [1, 23, 9], [2, 0, 17], [2, 1, 6], [2, 2, 0], [2, 3, 1], [2, 4, 3], [2, 5, 1], [2, 6, 0], [2, 7, 0], [2, 8, 1], [2, 9, 9], [2, 10, 29], [2, 11, 77], [2, 12, 53], [2, 13, 35], [2, 14, 102], [2, 15, 105], [2, 16, 115], [2, 17, 115], [2, 18, 81], [2, 19, 46], [2, 20, 56], [2, 21, 32], [2, 22, 27], [2, 23, 25], [3, 0, 13], [3, 1, 10], [3, 2, 1], [3, 3, 0], [3, 4, 2], [3, 5, 6], [3, 6, 0], [3, 7, 0], [3, 8, 1], [3, 9, 15], [3, 10, 45], [3, 11, 105], [3, 12, 54], [3, 13, 35], [3, 14, 98], [3, 15, 113], [3, 16, 125], [3, 17, 145], [3, 18, 84], [3, 19, 74], [3, 20, 78], [3, 21, 50], [3, 22, 43], [3, 23, 21], [4, 0, 9], [4, 1, 2], [4, 2, 3], [4, 3, 0], [4, 4, 7], [4, 5, 1], [4, 6, 2], [4, 7, 1], [4, 8, 8], [4, 9, 23], [4, 10, 48], [4, 11, 97], [4, 12, 65], [4, 13, 36], [4, 14, 75], [4, 15, 129], [4, 16, 98], [4, 17, 116], [4, 18, 70], [4, 19, 47], [4, 20, 48], [4, 21, 57], [4, 22, 31], [4, 23, 26], [5, 0, 12], [5, 1, 9], [5, 2, 0], [5, 3, 14], [5, 4, 0], [5, 5, 0], [5, 6, 1], [5, 7, 0], [5, 8, 1], [5, 9, 21], [5, 10, 50], [5, 11, 82], [5, 12, 45], [5, 13, 41], [5, 14, 101], [5, 15, 135], [5, 16, 102], [5, 17, 99], [5, 18, 64], [5, 19, 19], [5, 20, 24], [5, 21, 27], [5, 22, 38], [5, 23, 27], [6, 0, 17], [6, 1, 10], [6, 2, 14], [6, 3, 0], [6, 4, 1], [6, 5, 1], [6, 6, 0], [6, 7, 1], [6, 8, 4], [6, 9, 7], [6, 10, 11], [6, 11, 10], [6, 12, 2], [6, 13, 13], [6, 14, 28], [6, 15, 47], [6, 16, 39], [6, 17, 36], [6, 18, 25], [6, 19, 7], [6, 20, 14], [6, 21, 12], [6, 22, 1], [6, 23, 3]];\n  var source = [];\n\n  for (var i = 0; i < 7; i++) {\n    for (var j = 0; j < 24; j++) {\n      var item = {};\n      item.weekday = i;\n      item.hour = data[i * 24 + j][1];\n      item.commits = data[i * 24 + j][2];\n      source.push(item);\n    }\n  }\n\n  var chart = new _g.Chart({\n    container: 'container',\n    autoFit: false,\n    width: 600,\n    height: 500\n  });\n  chart.data(source);\n  chart.scale({\n    weekday: {\n      type: 'cat',\n      values: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n    },\n    hour: {\n      type: 'cat',\n      values: ['12a', '1a', '2a', '3a', '4a', '5a', '6a', '7a', '8a', '9a', '10a', '11a', '12p', '1p', '2p', '3p', '4p', '5p', '6p', '7p', '8p', '9p', '10p', '11p']\n    }\n  });\n  chart.tooltip({\n    showTitle: false,\n    showMarkers: false\n  });\n  chart.legend(false);\n  chart.axis('weekday', {\n    line: null,\n    tickLine: null,\n    grid: null,\n    label: {\n      style: {\n        fontSize: 14,\n        fill: '#555'\n      }\n    }\n  });\n  chart.axis('hour', {\n    line: {\n      style: {\n        stroke: '#eee',\n        lineWidth: 1\n      }\n    },\n    tickLine: {\n      length: -10\n    }\n  });\n  chart.point().position('hour*weekday').size('commits', [2, 10]).shape('circle').color('#bfbfbf');\n  chart.interaction('element-active');\n  chart.render();\n});"},{"relativePath":"other/other/demo/hexbin-size.ts","absolutePath":"/Users/pd/Documents/code/github/G2/examples/other/other/demo/hexbin-size.ts","order":6,"filename":"hexbin-size.ts","title":{"zh":"hexbin-size","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*tX5lSazu4G8AAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/gaussion-distribution.json')\n  .then(res => res.json())\n  .then(data => {\n    const dv = new DataSet.View().source(data)\n      .transform({\n        sizeByCount: true, // calculate bin size by binning count\n        type: 'bin.hexagon',\n        fields: ['x', 'y'], // 对应坐标轴上的一个点\n        bins: [10, 5]\n      });\n\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500\n    });\n    chart.data(dv.rows);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.legend({\n      offset: 40\n    });\n    chart.axis('x', {\n      grid: {\n        line: {\n          style: {\n            stroke: '#d9d9d9',\n            lineWidth: 1,\n            lineDash: [2, 2]\n          }\n        }\n      }\n    });\n    chart\n      .polygon()\n      .position('x*y')\n      .color('count', '#BAE7FF-#1890FF-#0050B3')\n      .style({\n        lineWidth: 1,\n        stroke: '#fff'\n      });\n    chart.interaction('element-active');\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.hexbinSize = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/gaussion-distribution.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var dv = new _dataSet.default.View().source(data).transform({\n      sizeByCount: true,\n      // calculate bin size by binning count\n      type: 'bin.hexagon',\n      fields: ['x', 'y'],\n      // 对应坐标轴上的一个点\n      bins: [10, 5]\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500\n    });\n    chart.data(dv.rows);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.legend({\n      offset: 40\n    });\n    chart.axis('x', {\n      grid: {\n        line: {\n          style: {\n            stroke: '#d9d9d9',\n            lineWidth: 1,\n            lineDash: [2, 2]\n          }\n        }\n      }\n    });\n    chart.polygon().position('x*y').color('count', '#BAE7FF-#1890FF-#0050B3').style({\n      lineWidth: 1,\n      stroke: '#fff'\n    });\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"},{"relativePath":"other/other/demo/rectbin-size.ts","absolutePath":"/Users/pd/Documents/code/github/G2/examples/other/other/demo/rectbin-size.ts","order":7,"filename":"rectbin-size.ts","title":{"zh":"矩形大小分箱图","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*cC7LT6_AVqYAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/gaussion-distribution.json')\n  .then(res => res.json())\n  .then(data => {\n    const dv = new DataSet.View().source(data);\n    dv.transform({\n      sizeByCount: true, // calculate bin size by binning count\n      type: 'bin.rectangle',\n      fields: ['x', 'y'], // 对应坐标轴上的一个点\n      bins: [20, 10]\n    });\n\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500\n    });\n    chart.data(dv.rows);\n    chart.legend({\n      offset: 40\n    });\n    chart.tooltip(false);\n    chart.polygon()\n      .position('x*y')\n      .color('count', '#BAE7FF-#1890FF-#0050B3');\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.rectbinSize = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/gaussion-distribution.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var dv = new _dataSet.default.View().source(data);\n    dv.transform({\n      sizeByCount: true,\n      // calculate bin size by binning count\n      type: 'bin.rectangle',\n      fields: ['x', 'y'],\n      // 对应坐标轴上的一个点\n      bins: [20, 10]\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500\n    });\n    chart.data(dv.rows);\n    chart.legend({\n      offset: 40\n    });\n    chart.tooltip(false);\n    chart.polygon().position('x*y').color('count', '#BAE7FF-#1890FF-#0050B3');\n    chart.render();\n  });\n});"},{"relativePath":"other/other/demo/regression.ts","absolutePath":"/Users/pd/Documents/code/github/G2/examples/other/other/demo/regression.ts","order":8,"filename":"regression.ts","title":{"zh":"回归曲线","en":"regression line chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*Qr1lR5J3XI8AAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nconst COLOR_PLATE_20 = [\n  '#5B8FF9',\n  '#BDD2FD',\n  '#5AD8A6',\n  '#BDEFDB',\n  '#5D7092',\n  '#C2C8D5',\n  '#F6BD16',\n  '#FBE5A2',\n  '#E8684A',\n  '#F6C3B7',\n  '#6DC8EC',\n  '#B6E3F5',\n  '#9270CA',\n  '#D3C6EA',\n  '#FF9D4D',\n  '#FFD8B8',\n  '#269A99',\n  '#AAD8D8',\n  '#FF99C3',\n  '#FFD6E7',\n];\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/diamond.json')\n  .then(res => res.json())\n  .then(data => {\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: 50\n    });\n\n    chart.scale({\n      carat: {\n        sync: true,\n        nice: true,\n      },\n      price: {\n        sync: true,\n        nice: true,\n      }\n    });\n\n    // background\n    const pointsView = chart.createView();\n    pointsView.data(data);\n    pointsView.point().position('carat*price');\n\n    const REGRESSION_METHODS = [\n      'linear',\n      'exponential',\n      'logarithmic',\n      'power',\n      'polynomial'\n    ];\n    REGRESSION_METHODS.forEach((method, i) => {\n      const dv = new DataSet.View().source(data)\n        .transform({\n          type: 'regression',\n          method,\n          fields: ['carat', 'price'],\n          bandwidth: 0.1,\n          extent: [0, 4],\n          as: ['carat', 'price']\n        });\n      const view = chart.createView();\n      view.axis(false);\n      view.data(dv.rows);\n      view.line()\n        .position('carat*price')\n        .size(1)\n        .color(COLOR_PLATE_20[i]);\n    });\n\n    chart.render();\n  });\n\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.regression = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var COLOR_PLATE_20 = ['#5B8FF9', '#BDD2FD', '#5AD8A6', '#BDEFDB', '#5D7092', '#C2C8D5', '#F6BD16', '#FBE5A2', '#E8684A', '#F6C3B7', '#6DC8EC', '#B6E3F5', '#9270CA', '#D3C6EA', '#FF9D4D', '#FFD8B8', '#269A99', '#AAD8D8', '#FF99C3', '#FFD6E7'];\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/diamond.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: 50\n    });\n    chart.scale({\n      carat: {\n        sync: true,\n        nice: true\n      },\n      price: {\n        sync: true,\n        nice: true\n      }\n    }); // background\n\n    var pointsView = chart.createView();\n    pointsView.data(data);\n    pointsView.point().position('carat*price');\n    var REGRESSION_METHODS = ['linear', 'exponential', 'logarithmic', 'power', 'polynomial'];\n    REGRESSION_METHODS.forEach(function (method, i) {\n      var dv = new _dataSet.default.View().source(data).transform({\n        type: 'regression',\n        method: method,\n        fields: ['carat', 'price'],\n        bandwidth: 0.1,\n        extent: [0, 4],\n        as: ['carat', 'price']\n      });\n      var view = chart.createView();\n      view.axis(false);\n      view.data(dv.rows);\n      view.line().position('carat*price').size(1).color(COLOR_PLATE_20[i]);\n    });\n    chart.render();\n  });\n});"},{"relativePath":"other/other/demo/word-cloud-mask.ts","absolutePath":"/Users/pd/Documents/code/github/G2/examples/other/other/demo/word-cloud-mask.ts","order":9,"filename":"word-cloud-mask.ts","title":{"zh":"带图片遮罩的词云","en":"word cloud with shape"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*id4CSZIMCtsAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart, registerShape, Util } from '@antv/g2';\n\nfunction getTextAttrs(cfg) {\n  return {\n    ...cfg.style,\n    fontSize: cfg.data.size,\n    text: cfg.data.text,\n    textAlign: 'center',\n    fontFamily: cfg.data.font,\n    fill: cfg.color,\n    textBaseline: 'Alphabetic'\n  };\n}\n\n// 给 point 注册一个词云的 shape\nregisterShape('point', 'cloud', {\n  draw(cfg, container) {\n    const attrs = getTextAttrs(cfg);\n    const textShape = container.addShape('text', {\n      attrs: {\n        ...attrs,\n        x: cfg.x,\n        y: cfg.y\n      }\n    });\n    if (cfg.data.rotate) {\n      Util.rotate(textShape, cfg.data.rotate * Math.PI / 180);\n    }\n    return textShape;\n  }\n});\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/antv-keywords.json')\n  .then(res => res.json())\n  .then(data => {\n    const dv = new DataSet.View().source(data);\n    const range = dv.range('value');\n    const min = range[0];\n    const max = range[1];\n    const imageMask = new Image();\n    imageMask.crossOrigin = '';\n    imageMask.src = 'https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*07tdTIOmvlYAAAAAAAAAAABkARQnAQ';\n    imageMask.onload = () => {\n      dv.transform({\n        type: 'tag-cloud',\n        fields: ['name', 'value'],\n        imageMask,\n        font: 'Verdana',\n        size: [600, 400], // 宽高设置最好根据 imageMask 做调整\n        padding: 0,\n        timeInterval: 5000, // max execute time\n        rotate() {\n          let random = ~~(Math.random() * 4) % 4;\n          if (random === 2) {\n            random = 0;\n          }\n          return random * 90; // 0, 90, 270\n        },\n        fontSize(d) {\n          return ((d.value - min) / (max - min)) * (32 - 8) + 8;\n        }\n      });\n      const chart = new Chart({\n        container: 'container',\n        autoFit: false,\n        width: 600, // 宽高设置最好根据 imageMask 做调整\n        height: 400,\n        padding: 0\n      });\n      chart.data(dv.rows);\n      chart.scale({\n        x: { nice: false },\n        y: { nice: false }\n      });\n      chart.legend(false);\n      chart.axis(false);\n      chart.tooltip({\n        showTitle: false,\n        showMarkers: false\n      });\n      chart.coordinate().reflect();\n      chart.point()\n        .position('x*y')\n        .color('text')\n        .shape('cloud')\n        .state({\n          active: {\n            style: {\n              fillOpacity: 0.4\n            }\n          }\n        });\n      chart.interaction('element-active');\n      chart.render();\n    };\n  });\n\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.wordCloudMask = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function getTextAttrs(cfg) {\n    return { ...cfg.style,\n      fontSize: cfg.data.size,\n      text: cfg.data.text,\n      textAlign: 'center',\n      fontFamily: cfg.data.font,\n      fill: cfg.color,\n      textBaseline: 'Alphabetic'\n    };\n  } // 给 point 注册一个词云的 shape\n\n\n  (0, _g.registerShape)('point', 'cloud', {\n    draw: function draw(cfg, container) {\n      var attrs = getTextAttrs(cfg);\n      var textShape = container.addShape('text', {\n        attrs: { ...attrs,\n          x: cfg.x,\n          y: cfg.y\n        }\n      });\n\n      if (cfg.data.rotate) {\n        _g.Util.rotate(textShape, cfg.data.rotate * Math.PI / 180);\n      }\n\n      return textShape;\n    }\n  });\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/antv-keywords.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var dv = new _dataSet.default.View().source(data);\n    var range = dv.range('value');\n    var min = range[0];\n    var max = range[1];\n    var imageMask = new Image();\n    imageMask.crossOrigin = '';\n    imageMask.src = 'https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*07tdTIOmvlYAAAAAAAAAAABkARQnAQ';\n\n    imageMask.onload = function () {\n      dv.transform({\n        type: 'tag-cloud',\n        fields: ['name', 'value'],\n        imageMask: imageMask,\n        font: 'Verdana',\n        size: [600, 400],\n        // 宽高设置最好根据 imageMask 做调整\n        padding: 0,\n        timeInterval: 5000,\n        // max execute time\n        rotate: function rotate() {\n          var random = ~~(Math.random() * 4) % 4;\n\n          if (random === 2) {\n            random = 0;\n          }\n\n          return random * 90; // 0, 90, 270\n        },\n        fontSize: function fontSize(d) {\n          return (d.value - min) / (max - min) * (32 - 8) + 8;\n        }\n      });\n      var chart = new _g.Chart({\n        container: 'container',\n        autoFit: false,\n        width: 600,\n        // 宽高设置最好根据 imageMask 做调整\n        height: 400,\n        padding: 0\n      });\n      chart.data(dv.rows);\n      chart.scale({\n        x: {\n          nice: false\n        },\n        y: {\n          nice: false\n        }\n      });\n      chart.legend(false);\n      chart.axis(false);\n      chart.tooltip({\n        showTitle: false,\n        showMarkers: false\n      });\n      chart.coordinate().reflect();\n      chart.point().position('x*y').color('text').shape('cloud').state({\n        active: {\n          style: {\n            fillOpacity: 0.4\n          }\n        }\n      });\n      chart.interaction('element-active');\n      chart.render();\n    };\n  });\n});"},{"relativePath":"other/other/demo/word-cloud.ts","absolutePath":"/Users/pd/Documents/code/github/G2/examples/other/other/demo/word-cloud.ts","order":10,"filename":"word-cloud.ts","title":{"zh":"词云","en":"word cloud"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*SEgST634CwUAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart, registerShape, Util } from '@antv/g2';\n\nfunction getTextAttrs(cfg) {\n  console.log(cfg);\n  return {\n    ...cfg.defaultStyle,\n    ...cfg.style,\n    fontSize: cfg.data.size,\n    text: cfg.data.text,\n    textAlign: 'center',\n    fontFamily: cfg.data.font,\n    fill: cfg.color || cfg.defaultStyle.stroke,\n    textBaseline: 'Alphabetic'\n  };\n}\n\n// 给point注册一个词云的shape\nregisterShape('point', 'cloud', {\n  draw(cfg, container) {\n    const attrs = getTextAttrs(cfg);\n    const textShape = container.addShape('text', {\n      attrs: {\n        ...attrs,\n        x: cfg.x,\n        y: cfg.y\n      }\n    });\n    if (cfg.data.rotate) {\n      Util.rotate(textShape, cfg.data.rotate * Math.PI / 180);\n    }\n\n    return textShape;\n  }\n});\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/world-population.json')\n  .then(res => res.json())\n  .then(data => {\n    const dv = new DataSet.View().source(data);\n    const range = dv.range('value');\n    const min = range[0];\n    const max = range[1];\n    dv.transform({\n      type: 'tag-cloud',\n      fields: ['x', 'value'],\n      size: [600, 500],\n      font: 'Verdana',\n      padding: 0,\n      timeInterval: 5000, // max execute time\n      rotate() {\n        let random = ~~(Math.random() * 4) % 4;\n        if (random === 2) {\n          random = 0;\n        }\n        return random * 90; // 0, 90, 270\n      },\n      fontSize(d) {\n        if (d.value) {\n          return ((d.value - min) / (max - min)) * (80 - 24) + 24;\n        }\n        return 0;\n      }\n    });\n    const chart = new Chart({\n      container: 'container',\n      autoFit: false,\n      width: 600,\n      height: 500,\n      padding: 0\n    });\n    chart.data(dv.rows);\n    chart.scale({\n      x: { nice: false },\n      y: { nice: false }\n    });\n    chart.legend(false);\n    chart.axis(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.coordinate().reflect();\n    chart.point()\n      .position('x*y')\n      .shape('cloud')\n      .tooltip('value*category');\n    chart.interaction('element-active');\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.wordCloud = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function getTextAttrs(cfg) {\n    console.log(cfg);\n    return { ...cfg.defaultStyle,\n      ...cfg.style,\n      fontSize: cfg.data.size,\n      text: cfg.data.text,\n      textAlign: 'center',\n      fontFamily: cfg.data.font,\n      fill: cfg.color || cfg.defaultStyle.stroke,\n      textBaseline: 'Alphabetic'\n    };\n  } // 给point注册一个词云的shape\n\n\n  (0, _g.registerShape)('point', 'cloud', {\n    draw: function draw(cfg, container) {\n      var attrs = getTextAttrs(cfg);\n      var textShape = container.addShape('text', {\n        attrs: { ...attrs,\n          x: cfg.x,\n          y: cfg.y\n        }\n      });\n\n      if (cfg.data.rotate) {\n        _g.Util.rotate(textShape, cfg.data.rotate * Math.PI / 180);\n      }\n\n      return textShape;\n    }\n  });\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/world-population.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var dv = new _dataSet.default.View().source(data);\n    var range = dv.range('value');\n    var min = range[0];\n    var max = range[1];\n    dv.transform({\n      type: 'tag-cloud',\n      fields: ['x', 'value'],\n      size: [600, 500],\n      font: 'Verdana',\n      padding: 0,\n      timeInterval: 5000,\n      // max execute time\n      rotate: function rotate() {\n        var random = ~~(Math.random() * 4) % 4;\n\n        if (random === 2) {\n          random = 0;\n        }\n\n        return random * 90; // 0, 90, 270\n      },\n      fontSize: function fontSize(d) {\n        if (d.value) {\n          return (d.value - min) / (max - min) * (80 - 24) + 24;\n        }\n\n        return 0;\n      }\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: false,\n      width: 600,\n      height: 500,\n      padding: 0\n    });\n    chart.data(dv.rows);\n    chart.scale({\n      x: {\n        nice: false\n      },\n      y: {\n        nice: false\n      }\n    });\n    chart.legend(false);\n    chart.axis(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.coordinate().reflect();\n    chart.point().position('x*y').shape('cloud').tooltip('value*category');\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"}]}}}}